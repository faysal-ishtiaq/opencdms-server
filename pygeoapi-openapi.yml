components:
  parameters:
    f:
      description: The optional f parameter indicates the output format which the
        server shall provide as part of the response document.  The default format
        is GeoJSON.
      explode: false
      in: query
      name: f
      required: false
      schema:
        default: json
        enum:
        - json
        - html
        - jsonld
        type: string
      style: form
    lang:
      description: The optional lang parameter instructs the server return a response
        in a certain language, if supported.  If the language is not among the available
        values, the Accept-Language header language will be used if it is supported.
        If the header is missing, the default server language is used. Note that providers
        may only support a single language (or often no language at all), that can
        be different from the server language.  Language strings can be written in
        a complex (e.g. "fr-CA,fr;q=0.9,en-US;q=0.8,en;q=0.7"), simple (e.g. "de")
        or locale-like (e.g. "de-CH" or "fr_BE") fashion.
      in: query
      name: lang
      required: false
      schema:
        default: en-US
        enum:
        - en-US
        - fr-CA
        type: string
    properties:
      description: The properties that should be included for each feature. The parameter
        value is a comma-separated list of property names.
      explode: false
      in: query
      name: properties
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
    skipGeometry:
      description: This option can be used to skip response geometries for each feature.
      explode: false
      in: query
      name: skipGeometry
      required: false
      schema:
        default: false
        type: boolean
      style: form
    startindex:
      description: The optional startindex parameter indicates the index within the
        result set from which the server shall begin presenting results in the response
        document.  The first element has an index of 0 (default).
      explode: false
      in: query
      name: startindex
      required: false
      schema:
        default: 0
        minimum: 0
        type: integer
      style: form
  responses:
    '200':
      description: successful operation
    Queryables:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/queryables'
      description: successful queryables operation
    Tiles:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/tiles'
      description: Retrieves the tiles description for this collection
    default:
      content:
        application/json:
          schema:
            $ref: https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/core/openapi/schemas/exception.yaml
      description: Unexpected error
  schemas:
    queryable:
      properties:
        description:
          description: a human-readable narrative describing the queryable
          type: string
        language:
          default:
          - en
          description: the language used for the title and description
          type: string
        queryable:
          description: the token that may be used in a CQL predicate
          type: string
        title:
          description: a human readable title for the queryable
          type: string
        type:
          description: the data type of the queryable
          type: string
        type-ref:
          description: a reference to the formal definition of the type
          format: url
          type: string
      required:
      - queryable
      - type
      type: object
    queryables:
      properties:
        queryables:
          items:
            $ref: '#/components/schemas/queryable'
          type: array
      required:
      - queryables
      type: object
    tilematrixsetlink:
      properties:
        tileMatrixSet:
          type: string
        tileMatrixSetURI:
          type: string
      required:
      - tileMatrixSet
      type: object
    tiles:
      properties:
        links:
          items:
            $ref: https://raw.githubusercontent.com/opengeospatial/ogcapi-tiles/master/openapi/swaggerhub/tiles.yaml#/components/schemas/link
          type: array
        tileMatrixSetLinks:
          items:
            $ref: '#/components/schemas/tilematrixsetlink'
          type: array
      required:
      - tileMatrixSetLinks
      - links
      type: object
info:
  contact:
    email: you@example.org
    name: Organization Name
    url: https://pygeoapi.io
  description: pygeoapi provides an API to geospatial data
  license:
    name: CC-BY 4.0 license
    url: https://creativecommons.org/licenses/by/4.0/
  termsOfService: https://creativecommons.org/licenses/by/4.0/
  title: pygeoapi default instance
  version: 0.11.0
  x-keywords:
  - geospatial
  - data
  - api
openapi: 3.0.2
paths:
  /:
    get:
      description: Landing page
      operationId: getLandingPage
      parameters:
      - $ref: '#/components/parameters/f'
      - $ref: '#/components/parameters/lang'
      responses:
        '200':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/LandingPage
        '400':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '500':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Landing page
      tags:
      - server
  /collections:
    get:
      description: Collections
      operationId: getCollections
      parameters:
      - $ref: '#/components/parameters/f'
      - $ref: '#/components/parameters/lang'
      responses:
        '200':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Collections
        '400':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '500':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Collections
      tags:
      - server
  /collections/cmip5:
    get:
      description: CMIP5 sample
      operationId: describeCmip5Collection
      parameters:
      - $ref: '#/components/parameters/f'
      - $ref: '#/components/parameters/lang'
      responses:
        '200':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Collection
        '400':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get CMIP5 sample metadata
      tags:
      - cmip5
  /collections/cmip5/coverage:
    get:
      description: CMIP5 sample
      operationId: getCmip5Coverage
      parameters:
      - &id001
        description: The optional f parameter indicates the output format which the
          server shall provide as part of the response document.  The default format
          is GeoJSON.
        explode: false
        in: query
        name: f
        required: false
        schema:
          default: json
          enum:
          - json
          - html
          - jsonld
          - csv
          type: string
        style: form
      - &id002
        description: The optional lang parameter instructs the server return a response
          in a certain language, if supported.  If the language is not among the available
          values, the Accept-Language header language will be used if it is supported.
          If the header is missing, the default server language is used. Note that
          providers may only support a single language (or often no language at all),
          that can be different from the server language.  Language strings can be
          written in a complex (e.g. "fr-CA,fr;q=0.9,en-US;q=0.8,en;q=0.7"), simple
          (e.g. "de") or locale-like (e.g. "de-CH" or "fr_BE") fashion.
        in: query
        name: lang
        required: false
        schema:
          default: en-US
          enum:
          - en-US
          - fr-CA
          type: string
      responses:
        '200':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Features
        '400':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get CMIP5 sample coverage
      tags:
      - cmip5
  /collections/cmip5/coverage/domainset:
    get:
      description: CMIP5 sample
      operationId: getCmip5CoverageDomainSet
      parameters:
      - *id001
      - *id002
      responses:
        '200':
          $ref: https://raw.githubusercontent.com/tomkralidis/ogcapi-coverages-1/fix-cis/yaml-unresolved/schemas/cis_1.1/domainSet.yaml
        '400':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get CMIP5 sample coverage domain set
      tags:
      - cmip5
  /collections/cmip5/coverage/rangetype:
    get:
      description: CMIP5 sample
      operationId: getCmip5CoverageRangeType
      parameters:
      - *id001
      - *id002
      responses:
        '200':
          $ref: https://raw.githubusercontent.com/tomkralidis/ogcapi-coverages-1/fix-cis/yaml-unresolved/schemas/cis_1.1/rangeType.yaml
        '400':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get CMIP5 sample coverage range type
      tags:
      - cmip5
  /collections/gdps-temperature:
    get:
      description: Global Deterministic Prediction System sample
      operationId: describeGdps-temperatureCollection
      parameters:
      - $ref: '#/components/parameters/f'
      - $ref: '#/components/parameters/lang'
      responses:
        '200':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Collection
        '400':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Global Deterministic Prediction System sample metadata
      tags:
      - gdps-temperature
  /collections/gdps-temperature/coverage:
    get:
      description: Global Deterministic Prediction System sample
      operationId: getGdps-temperatureCoverage
      parameters:
      - *id001
      - *id002
      responses:
        '200':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Features
        '400':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Global Deterministic Prediction System sample coverage
      tags:
      - gdps-temperature
  /collections/gdps-temperature/coverage/domainset:
    get:
      description: Global Deterministic Prediction System sample
      operationId: getGdps-temperatureCoverageDomainSet
      parameters:
      - *id001
      - *id002
      responses:
        '200':
          $ref: https://raw.githubusercontent.com/tomkralidis/ogcapi-coverages-1/fix-cis/yaml-unresolved/schemas/cis_1.1/domainSet.yaml
        '400':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Global Deterministic Prediction System sample coverage domain set
      tags:
      - gdps-temperature
  /collections/gdps-temperature/coverage/rangetype:
    get:
      description: Global Deterministic Prediction System sample
      operationId: getGdps-temperatureCoverageRangeType
      parameters:
      - *id001
      - *id002
      responses:
        '200':
          $ref: https://raw.githubusercontent.com/tomkralidis/ogcapi-coverages-1/fix-cis/yaml-unresolved/schemas/cis_1.1/rangeType.yaml
        '400':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Global Deterministic Prediction System sample coverage range type
      tags:
      - gdps-temperature
  /collections/icoads-sst:
    get:
      description: International Comprehensive Ocean-Atmosphere Data Set (ICOADS)
      operationId: describeIcoads-sstCollection
      parameters:
      - $ref: '#/components/parameters/f'
      - $ref: '#/components/parameters/lang'
      responses:
        '200':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Collection
        '400':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get International Comprehensive Ocean-Atmosphere Data Set (ICOADS)
        metadata
      tags:
      - icoads-sst
  /collections/icoads-sst/position:
    get:
      description: International Comprehensive Ocean-Atmosphere Data Set (ICOADS)
      operationId: queryPositionIcoads-sst
      parameters:
      - $ref: https://raw.githubusercontent.com/opengeospatial/ogcapi-environmental-data-retrieval/master/candidate-standard/openapi/parameters/positionCoords.yaml
      - $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/datetime
      - $ref: https://raw.githubusercontent.com/opengeospatial/ogcapi-environmental-data-retrieval/master/candidate-standard/openapi/parameters/parameter-name.yaml
      - $ref: https://raw.githubusercontent.com/opengeospatial/ogcapi-environmental-data-retrieval/master/candidate-standard/openapi/parameters/z.yaml
      - $ref: '#/components/parameters/f'
      responses:
        '200':
          content:
            application/prs.coverage+json:
              schema:
                $ref: https://raw.githubusercontent.com/opengeospatial/ogcapi-environmental-data-retrieval/master/candidate-standard/openapi/schemas/coverageJSON.yaml
          description: Response
      summary: query International Comprehensive Ocean-Atmosphere Data Set (ICOADS)
        by position
      tags:
      - icoads-sst
  /collections/lakes:
    get:
      description: lakes of the world, public domain
      operationId: describeLakesCollection
      parameters:
      - $ref: '#/components/parameters/f'
      - $ref: '#/components/parameters/lang'
      responses:
        '200':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Collection
        '400':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Large Lakes metadata
      tags:
      - lakes
  /collections/lakes/items:
    get:
      description: lakes of the world, public domain
      operationId: getLakesFeatures
      parameters:
      - *id001
      - *id002
      - $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/bbox
      - $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/limit
      - description: The properties that should be included for each feature. The
          parameter value is a comma-separated list of property names.
        explode: false
        in: query
        name: properties
        required: false
        schema:
          items:
            enum:
            - id
            - scalerank
            - name
            - name_alt
            - admin
            - featureclass
            type: string
          type: array
        style: form
      - $ref: '#/components/parameters/skipGeometry'
      - $ref: https://raw.githubusercontent.com/opengeospatial/ogcapi-records/master/core/openapi/parameters/sortby.yaml
      - $ref: '#/components/parameters/startindex'
      - explode: false
        in: query
        name: id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: scalerank
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: name_alt
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: admin
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: featureclass
        required: false
        schema:
          type: string
        style: form
      responses:
        '200':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Features
        '400':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Large Lakes items
      tags:
      - lakes
  /collections/lakes/items/{featureId}:
    get:
      description: lakes of the world, public domain
      operationId: getLakesFeature
      parameters:
      - $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/featureId
      - $ref: '#/components/parameters/f'
      - $ref: '#/components/parameters/lang'
      responses:
        '200':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Feature
        '400':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Large Lakes item by id
      tags:
      - lakes
  /collections/lakes/queryables:
    get:
      description: lakes of the world, public domain
      operationId: getLakesQueryables
      parameters:
      - *id001
      - *id002
      responses:
        '200':
          $ref: '#/components/responses/Queryables'
        '400':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Large Lakes queryables
      tags:
      - lakes
  /collections/lakes/tiles:
    get:
      description: lakes of the world, public domain
      operationId: describeLakesTiles
      parameters:
      - *id001
      responses:
        '200':
          $ref: '#/components/responses/Tiles'
        '400':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Fetch a Large Lakes tiles description
      tags:
      - lakes
  /collections/lakes/tiles/{tileMatrixSetId}/{tileMatrix}/{tileRow}/{tileCol}:
    get:
      description: lakes of the world, public domain
      operationId: getLakesTiles
      parameters:
      - $ref: https://raw.githubusercontent.com/opengeospatial/ogcapi-tiles/master/openapi/swaggerHubUnresolved/ogc-api-tiles.yaml#/components/parameters/tileMatrixSetId
      - $ref: https://raw.githubusercontent.com/opengeospatial/ogcapi-tiles/master/openapi/swaggerHubUnresolved/ogc-api-tiles.yaml#/components/parameters/tileMatrix
      - $ref: https://raw.githubusercontent.com/opengeospatial/ogcapi-tiles/master/openapi/swaggerHubUnresolved/ogc-api-tiles.yaml#/components/parameters/tileRow
      - $ref: https://raw.githubusercontent.com/opengeospatial/ogcapi-tiles/master/openapi/swaggerHubUnresolved/ogc-api-tiles.yaml#/components/parameters/tileCol
      - description: The optional f parameter indicates the output format which the
          server shall provide as part of the response document.
        explode: false
        in: query
        name: f
        required: false
        schema:
          default: pbf
          enum:
          - pbf
          type: string
        style: form
      responses:
        '200':
          content:
            application/vnd.mapbox-vector-tile:
              schema:
                format: binary
                type: string
          description: successful operation
        '400':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get a Large Lakes tile
      tags:
      - lakes
  /collections/objects:
    get:
      description: GeoJSON geometry types for GeoSparql and Schema Geometry conversion.
      operationId: describeObjectsCollection
      parameters:
      - $ref: '#/components/parameters/f'
      - $ref: '#/components/parameters/lang'
      responses:
        '200':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Collection
        '400':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get GeoJSON objects metadata
      tags:
      - objects
  /collections/objects/items:
    get:
      description: GeoJSON geometry types for GeoSparql and Schema Geometry conversion.
      operationId: getObjectsFeatures
      parameters:
      - *id001
      - *id002
      - $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/bbox
      - $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/limit
      - description: The properties that should be included for each feature. The
          parameter value is a comma-separated list of property names.
        explode: false
        in: query
        name: properties
        required: false
        schema:
          items:
            enum:
            - fid
            - uri
            - name
            type: string
          type: array
        style: form
      - $ref: '#/components/parameters/skipGeometry'
      - $ref: https://raw.githubusercontent.com/opengeospatial/ogcapi-records/master/core/openapi/parameters/sortby.yaml
      - $ref: '#/components/parameters/startindex'
      - explode: false
        in: query
        name: fid
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: uri
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        '200':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Features
        '400':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get GeoJSON objects items
      tags:
      - objects
  /collections/objects/items/{featureId}:
    get:
      description: GeoJSON geometry types for GeoSparql and Schema Geometry conversion.
      operationId: getObjectsFeature
      parameters:
      - $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/featureId
      - $ref: '#/components/parameters/f'
      - $ref: '#/components/parameters/lang'
      responses:
        '200':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Feature
        '400':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get GeoJSON objects item by id
      tags:
      - objects
  /collections/objects/queryables:
    get:
      description: GeoJSON geometry types for GeoSparql and Schema Geometry conversion.
      operationId: getObjectsQueryables
      parameters:
      - *id001
      - *id002
      responses:
        '200':
          $ref: '#/components/responses/Queryables'
        '400':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get GeoJSON objects queryables
      tags:
      - objects
  /collections/obs:
    get:
      description: My cool observations
      operationId: describeObsCollection
      parameters:
      - $ref: '#/components/parameters/f'
      - $ref: '#/components/parameters/lang'
      responses:
        '200':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Collection
        '400':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Observations metadata
      tags:
      - obs
  /collections/obs/items:
    get:
      description: My cool observations
      operationId: getObsFeatures
      parameters:
      - *id001
      - *id002
      - $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/bbox
      - $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/limit
      - description: The properties that should be included for each feature. The
          parameter value is a comma-separated list of property names.
        explode: false
        in: query
        name: properties
        required: false
        schema:
          items:
            enum:
            - id
            - stn_id
            - datetime
            - value
            - lat
            - long
            type: string
          type: array
        style: form
      - $ref: '#/components/parameters/skipGeometry'
      - $ref: https://raw.githubusercontent.com/opengeospatial/ogcapi-records/master/core/openapi/parameters/sortby.yaml
      - $ref: '#/components/parameters/startindex'
      - explode: false
        in: query
        name: id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: stn_id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: datetime
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: value
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: lat
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: long
        required: false
        schema:
          type: string
        style: form
      responses:
        '200':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Features
        '400':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Observations items
      tags:
      - obs
  /collections/obs/items/{featureId}:
    get:
      description: My cool observations
      operationId: getObsFeature
      parameters:
      - $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/featureId
      - $ref: '#/components/parameters/f'
      - $ref: '#/components/parameters/lang'
      responses:
        '200':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Feature
        '400':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Observations item by id
      tags:
      - obs
  /collections/obs/queryables:
    get:
      description: My cool observations
      operationId: getObsQueryables
      parameters:
      - *id001
      - *id002
      responses:
        '200':
          $ref: '#/components/responses/Queryables'
        '400':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Observations queryables
      tags:
      - obs
  /conformance:
    get:
      description: API conformance definition
      operationId: getConformanceDeclaration
      parameters:
      - $ref: '#/components/parameters/f'
      - $ref: '#/components/parameters/lang'
      responses:
        '200':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ConformanceDeclaration
        '400':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '500':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: API conformance definition
      tags:
      - server
  /openapi:
    get:
      description: This document
      operationId: getOpenapi
      parameters:
      - $ref: '#/components/parameters/f'
      - $ref: '#/components/parameters/lang'
      - description: UI to render the OpenAPI document
        explode: false
        in: query
        name: ui
        required: false
        schema:
          default: swagger
          enum:
          - swagger
          - redoc
          type: string
        style: form
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        default:
          $ref: '#/components/responses/default'
      summary: This document
      tags:
      - server
  /processes:
    get:
      description: Processes
      operationId: getProcesses
      parameters:
      - $ref: '#/components/parameters/f'
      responses:
        '200':
          $ref: https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/core/openapi/responses/ProcessList.yaml
        default:
          $ref: '#/components/responses/default'
      summary: Processes
      tags:
      - server
  /processes/hello-world:
    get:
      description: An example process that takes a name as input, and echoes it back
        as output. Intended to demonstrate a simple process with a single literal
        input.
      operationId: describeHello-worldProcess
      parameters:
      - $ref: '#/components/parameters/f'
      responses:
        '200':
          $ref: '#/components/responses/200'
        default:
          $ref: '#/components/responses/default'
      summary: Get process metadata
      tags:
      - hello-world
  /processes/hello-world/execution:
    post:
      description: An example process that takes a name as input, and echoes it back
        as output. Intended to demonstrate a simple process with a single literal
        input.
      operationId: executeHello-worldJob
      requestBody:
        content:
          application/json:
            example:
              inputs:
                message: An optional message.
                name: World
            schema:
              $ref: https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/core/openapi/schemas/execute.yaml
        description: Mandatory execute request JSON
        required: true
      responses:
        '200':
          $ref: '#/components/responses/200'
        '201':
          $ref: https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/core/openapi/responses/ExecuteAsync.yaml
        '404':
          $ref: https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/core/openapi/responses/NotFound.yaml
        '500':
          $ref: https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/core/openapi/responses/ServerError.yaml
        default:
          $ref: '#/components/responses/default'
      summary: Process Hello World execution
      tags:
      - hello-world
  /processes/hello-world/jobs:
    get:
      description: An example process that takes a name as input, and echoes it back
        as output. Intended to demonstrate a simple process with a single literal
        input.
      operationId: getHello-worldJobs
      responses:
        '200':
          $ref: '#/components/responses/200'
        '404':
          $ref: https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/core/openapi/responses/NotFound.yaml
        default:
          $ref: '#/components/responses/default'
      summary: Retrieve job list for process
      tags:
      - hello-world
  /processes/hello-world/jobs/{jobId}:
    delete:
      description: ''
      operationId: deleteHello-worldJob
      parameters:
      - &id003
        description: job identifier
        in: path
        name: jobId
        required: true
        schema:
          type: string
      responses:
        '204':
          $ref: '#/components/responses/204'
        '404':
          $ref: https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/core/openapi/responses/NotFound.yaml
        default:
          $ref: '#/components/responses/default'
      summary: Cancel / delete job
      tags:
      - hello-world
    get:
      description: ''
      operationId: getHello-worldJob
      parameters:
      - *id003
      - $ref: '#/components/parameters/f'
      responses:
        '200':
          $ref: '#/components/responses/200'
        '404':
          $ref: https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/core/openapi/responses/NotFound.yaml
        default:
          $ref: '#/components/responses/default'
      summary: Retrieve job details
      tags:
      - hello-world
  /processes/hello-world/jobs/{jobId}/results:
    get:
      description: ''
      operationId: getHello-worldJobResults
      parameters:
      - *id003
      - $ref: '#/components/parameters/f'
      responses:
        '200':
          $ref: '#/components/responses/200'
        '404':
          $ref: https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/core/openapi/responses/NotFound.yaml
        default:
          $ref: '#/components/responses/default'
      summary: Retrieve job results
      tags:
      - hello-world
servers:
- description: pygeoapi provides an API to geospatial data
  url: http://localhost:5000/pygeoapi/
tags:
- description: pygeoapi provides an API to geospatial data
  externalDocs:
    description: information
    url: http://example.org
  name: server
- description: SpatioTemporal Asset Catalog
  name: stac
- description: My cool observations
  name: obs
- description: CMIP5 sample
  name: cmip5
- description: lakes of the world, public domain
  name: lakes
- description: Global Deterministic Prediction System sample
  name: gdps-temperature
- description: International Comprehensive Ocean-Atmosphere Data Set (ICOADS)
  name: icoads-sst
- description: GeoJSON geometry types for GeoSparql and Schema Geometry conversion.
  name: objects
- description: An example process that takes a name as input, and echoes it back as
    output. Intended to demonstrate a simple process with a single literal input.
  name: hello-world

